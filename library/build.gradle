plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply from: "../config.gradle"

android {
    compileSdkVersion versions.compile_sdk

    defaultConfig {
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled options.minify_enabled
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }
    kotlinOptions {
        jvmTarget = versions.jvm_target
    }
    buildFeatures{
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", '*.aar'])
    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "androidx.test.ext:junit:${versions.android_junit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso_core}"

    api "androidx.appcompat:appcompat:${versions.appcompat}"
    api "com.google.android.material:material:${versions.material}"
    implementation "androidx.multidex:multidex:${versions.multidex}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    implementation "androidx.core:core-ktx:${versions.core_ktx}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinx_coroutines_android}"

    api "org.greenrobot:eventbus:${versions.event_bus}"

    api "com.squareup.moshi:moshi-kotlin:${versions.moshi_kotlin}"
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.converter_moshi}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.logging_interceptor}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.adapter_rxjava2}"

    api "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    api "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"

    api "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide_compiler}"

    //immersionbar
    // 基础依赖包，必须要依赖
    api "com.geyifeng.immersionbar:immersionbar:${versions.immersionbar}"
    // kotlin扩展（可选）
    api "com.geyifeng.immersionbar:immersionbar-ktx:${versions.immersionbar}"

    api "com.github.getActivity:XXPermissions:${versions.xxpermissions}"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"

    api "com.google.code.gson:gson:${versions.gson}"

}